package templates

import (
	"fmt"
	"gostart/posts"
)

templ Base(title string) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="utf-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1"/>
			<meta description="Gostart: Go starter kit"/>
			<meta name="htmx-config" content='{"includeIndicatorStyles": false}'/>
			<title>{ title }</title>
			<link href="/static/css/output/styles.css" rel="stylesheet"/>
			<script src="/static/js/htmx.min.js"></script>
		</head>
		<body class="grid min-h-[100dvh] grid-rows-[auto_1fr_auto] font-sans">
			<header class="navbar mb-10 bg-base-100">
				<div class="navbar-start">
					<div class="dropdown">
						<div tabindex="0" role="button" class="btn btn-ghost lg:hidden">
							<svg
								xmlns="http://www.w3.org/2000/svg"
								class="h-5 w-5"
								fill="none"
								viewBox="0 0 24 24"
								stroke="currentColor"
							>
								<path
									stroke-linecap="round"
									stroke-linejoin="round"
									stroke-width="2"
									d="M4 6h16M4 12h8m-8 6h16"
								></path>
							</svg>
						</div>
						<ul
							tabindex="0"
							class="menu dropdown-content menu-sm z-[1] mt-3 w-52 rounded-box bg-base-100 p-2 shadow"
						>
							<li>
								<a>Posts</a>
								<ul class="p-2">
									<!-- <li><a>Submenu 1</a></li>
									<li><a>Submenu 2</a></li> -->
								</ul>
							</li>
							<li><a>Contact</a></li>
							<li><a href="/about">About</a></li>
						</ul>
					</div>
					<a href="/" class="btn btn-ghost text-xl font-bold">GoStart</a>
				</div>
				<div class="navbar-center hidden lg:flex">
					<ul class="menu menu-horizontal px-1">
						<li>
							<details>
								<summary>Posts</summary>
								<ul class="p-2">
									<!-- <li><a>Submenu 1</a></li>
									<li><a>Submenu 2</a></li> -->
								</ul>
							</details>
						</li>
						<li><a>Contact</a></li>
						<li><a href="/about">About</a></li>
					</ul>
				</div>
				<div class="navbar-end">
					<span class="btn opacity-0">Button</span>
				</div>
			</header>
			<div class="grid justify-items-center">
				{ children... }
			</div>
			<footer class="mt-12 text-center text-sm">
				<p>Copyright © 2024 Zixian Chen. All rights reserved.</p>
				<div>
					<a href="https://zixianchen.com/projects" class="underline">Portfolio</a> | <a href="https://zixianchen.com/contact/" class="underline">Feedback</a>
				</div>
			</footer>
		</body>
	</html>
}

templ Post(message string, comments []posts.JoinComment, postID string) {
	@Base("Gostart - Post " + postID) {
		<main class="grid w-full max-w-[1600px] content-center justify-items-center gap-8 space-y-8 lg:grid-cols-3">
			<h1 class="text-5xl font-extrabold lg:col-span-3">Post { postID }</h1>
			<article id="posts" class="w-full space-y-4 lg:col-span-2">
				if len(comments) > 0 {
					for i := 0; i < len(comments); i++ {
						<div class="flex h-auto border border-neutral/30 bg-lime-300/20">
							<div class="me-8 w-24 p-2 text-center">
								if len(comments[i].ScoreString) > 0 {
									<button
										hx-target="#posts"
										hx-post={ string(templ.URL(fmt.Sprintf("/posts/%s/comment/%s/upvote", postID, comments[i].RowID))) }
										class="inline-block h-auto text-orange-600"
									>
										<svg xmlns="http://www.w3.org/2000/svg" width="2rem" height="2rem" class="inline-block" viewBox="0 0 24 24"><path fill="currentColor" d="m7 14l5-5l5 5z"></path></svg>
									</button>
								} else {
									<button
										hx-target="#posts"
										hx-trigger="click"
										hx-post={ string(templ.URL(fmt.Sprintf("/posts/%s/comment/%s/upvote", postID, comments[i].RowID))) }
										class="inline-block h-auto hover:text-orange-600 active:-translate-y-1"
									>
										<svg xmlns="http://www.w3.org/2000/svg" width="2rem" height="2rem" class="inline-block" viewBox="0 0 24 24"><path fill="currentColor" d="m7 14l5-5l5 5z"></path></svg>
									</button>
								}
								<div>
									if len(comments[i].CountString) > 0 {
										{ comments[i].CountString }
									} else {
										0
									}
								</div>
							</div>
							<div class="grow p-2">
								<div class="flex text-base text-base-content/60">
									<div class="grow font-bold">{ comments[i].Name }</div>
									<div class="">(#{ comments[i].RowID }) { comments[i].CreatedAt }</div>
								</div>
								<div class="flex">
									<div class="grow text-2xl">{ comments[i].Content }</div>
									<div>
										<button
											hx-target="#posts"
											hx-post={ string(templ.URL(fmt.Sprintf("/posts/%s/comment/%s/delete", postID, comments[i].RowID))) }
											class="py-2 ps-2 text-error"
										>
											<svg xmlns="http://www.w3.org/2000/svg" width="1.2em" height="1.2em" viewBox="0 0 24 24">
												<path fill="currentColor" d="M9 17h2V8H9zm4 0h2V8h-2zm-8 4V6H4V4h5V3h6v1h5v2h-1v15z"></path>
											</svg>
										</button>
									</div>
								</div>
							</div>
						</div>
					}
				} else {
					<div class="space-y-2 border border-neutral/30 bg-base-200 p-4">
						Nothing here!
					</div>
				}
			</article>
			<div class="w-full">
				<div class="grid justify-items-center">
					<div class="w-full" id="form-message"></div>
					<form method="post" id="comment-form" hx-post={ "/posts/" + postID + "/new" } hx-swap="outerHTML" hx-target="#posts" class="w-full max-w-2xl space-y-4 border border-neutral/20 p-4 shadow-lg">
						<label class="form-control">
							<div class="label">
								<span class="label-text">Name</span>
							</div>
							<input type="text" name="name" id="comment-form-name-input" class="input input-bordered rounded-none text-sm"/>
							<div id="form-name-error"></div>
						</label>
						<label class="form-control">
							<div class="label">
								<span class="label-text">Message</span>
							</div>
							<textarea name="message" id="comment-form-message-input" class="textarea textarea-bordered h-24 rounded-none" maxlength="2000"></textarea>
							<div id="form-message-error"></div>
						</label>
						<button id="comment-submit-button" class="btn btn-accent w-full rounded-none text-lg">+ Add</button>
						<script src="/static/js/output/comment-form.js"></script>
					</form>
				</div>
			</div>
		</main>
	}
}

templ About() {
	@Base("About") {
		<h1>About</h1>
	}
}

templ StarterWelcome(message string) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="utf-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1"/>
			<meta description="Gostart: Go starter kit"/>
			<meta name="htmx-config" content='{"includeIndicatorStyles": false}'/>
			<title>Gostart</title>
			<link href="/static/css/output/styles.css" rel="stylesheet"/>
			<script src="/static/js/htmx.min.js"></script>
		</head>
		<body class="grid min-h-[100dvh] grid-rows-[auto_1fr_auto] font-sans">
			<header></header>
			<main class="grid place-items-center content-center">
				<h1 class="text-5xl font-extrabold">GoStart Kit</h1>
				<p class="text-2xl">{ message }</p>
				<form method="post" action="/posts" class="join flex w-full justify-center pt-10 lg:order-last lg:pt-0">
					<input type="text" name="postID" hx-post="/posts" placeholder="Enter a post ID to continue" class="input join-item input-bordered input-accent w-full max-w-96 focus:outline-none active:border-0 active:border-2" autocomplete="off" required/>
					<button class="btn btn-accent join-item text-lg">Go</button>
				</form>
				<img src="/static/images/swole-doge.webp" alt="Swole Doge" width="500px" height="576px" class="py-10"/>
			</main>
			<footer class="mt-12 text-center text-sm">
				<p>Copyright © 2024 Zixian Chen. All rights reserved.</p>
				<div>
					<a href="https://zixianchen.com/projects" class="underline">Portfolio</a> | <a href="https://zixianchen.com/contact/" class="underline">Feedback</a>
				</div>
			</footer>
		</body>
	</html>
}
