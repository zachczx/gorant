package templates

import (
	"fmt"
	"gostart/posts"
)

templ Base(title string, username string, loggedIn string) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="utf-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1"/>
			<meta description="Gostart: Go starter kit"/>
			<meta name="htmx-config" content='{"includeIndicatorStyles": false}'/>
			<title>{ title }</title>
			<link href="/static/css/output/styles.css" rel="stylesheet"/>
			<script src="/static/js/ext/htmx.min.js"></script>
			<script async crossorigin="anonymous" data-clerk-publishable-key="pk_test_ZmluZXItYmFybmFjbGUtMjYuY2xlcmsuYWNjb3VudHMuZGV2JA" src="https://rested-rodent-96.clerk.accounts.dev/npm/@clerk/clerk-js@latest/dist/clerk.browser.js" type="text/javascript"></script>
		</head>
		<body class="grid min-h-[100dvh] grid-rows-[auto_1fr_auto] font-sans">
			<header class="navbar mb-10 bg-base-100">
				<div class="navbar-start">
					<div class="dropdown">
						<div tabindex="0" role="button" class="btn btn-ghost lg:hidden">
							<svg
								xmlns="http://www.w3.org/2000/svg"
								class="h-5 w-5"
								fill="none"
								viewBox="0 0 24 24"
								stroke="currentColor"
							>
								<path
									stroke-linecap="round"
									stroke-linejoin="round"
									stroke-width="2"
									d="M4 6h16M4 12h8m-8 6h16"
								></path>
							</svg>
						</div>
						<ul
							tabindex="-1"
							class="menu dropdown-content menu-sm z-[1] mt-3 w-52 rounded-box bg-base-100 p-2 opacity-0 shadow"
						>
							<li>
								<a>Posts</a>
								<ul class="p-2">
									<!-- <li><a>Submenu 1</a></li>
									<li><a>Submenu 2</a></li> -->
								</ul>
							</li>
							<li><a>Contact</a></li>
							<li><a href="/about">About</a></li>
						</ul>
					</div>
					<a href="/" class="btn btn-ghost text-xl font-bold">GoRant</a>
				</div>
				<div class="navbar-center hidden lg:flex">
					<ul class="menu menu-horizontal px-1 opacity-0">
						<li>
							<details>
								<summary>Posts</summary>
								<ul class="p-2">
									<!-- <li><a>Submenu 1</a></li>
									<li><a>Submenu 2</a></li> -->
								</ul>
							</details>
						</li>
						<li><a>Contact</a></li>
						<li><a href="/about">About</a></li>
					</ul>
				</div>
				<div class="navbar-end pe-6">
					if loggedIn == "false" {
						<div>
							<a href="/auth/login" class="btn btn-accent btn-sm me-2">Register</a>
							<a href="/auth/login" class="btn btn-outline btn-accent btn-sm me-2">Login</a>
						</div>
					}
					if loggedIn == "true" {
						<div class="flex items-center">
							<div class="btn btn-outline btn-xs me-4 text-sm">{ username }</div>
							<div class="dropdown dropdown-end dropdown-bottom">
								<div tabindex="0" role="button" class="m-1">
									<svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" class="inline-block h-6 w-6" viewBox="0 0 24 24"><path fill="currentColor" d="m9.25 22l-.4-3.2q-.325-.125-.612-.3t-.563-.375L4.7 19.375l-2.75-4.75l2.575-1.95Q4.5 12.5 4.5 12.338v-.675q0-.163.025-.338L1.95 9.375l2.75-4.75l2.975 1.25q.275-.2.575-.375t.6-.3l.4-3.2h5.5l.4 3.2q.325.125.613.3t.562.375l2.975-1.25l2.75 4.75l-2.575 1.95q.025.175.025.338v.674q0 .163-.05.338l2.575 1.95l-2.75 4.75l-2.95-1.25q-.275.2-.575.375t-.6.3l-.4 3.2zM11 20h1.975l.35-2.65q.775-.2 1.438-.587t1.212-.938l2.475 1.025l.975-1.7l-2.15-1.625q.125-.35.175-.737T17.5 12t-.05-.787t-.175-.738l2.15-1.625l-.975-1.7l-2.475 1.05q-.55-.575-1.212-.962t-1.438-.588L13 4h-1.975l-.35 2.65q-.775.2-1.437.588t-1.213.937L5.55 7.15l-.975 1.7l2.15 1.6q-.125.375-.175.75t-.05.8q0 .4.05.775t.175.75l-2.15 1.625l.975 1.7l2.475-1.05q.55.575 1.213.963t1.437.587zm1.05-4.5q1.45 0 2.475-1.025T15.55 12t-1.025-2.475T12.05 8.5q-1.475 0-2.488 1.025T8.55 12t1.013 2.475T12.05 15.5M12 12"></path></svg>
								</div>
								<ul tabindex="0" class="menu dropdown-content z-[1] w-52 rounded-box bg-base-100 p-2 shadow">
									<li><a href="/settings">Settings</a></li>
									<li><a href="/auth/logout">Logout</a></li>
								</ul>
							</div>
						</div>
					}
				</div>
			</header>
			<div class="grid justify-items-center">
				{ children... }
			</div>
			<footer class="mt-12 text-center text-sm">
				<p>Copyright Â© 2024 Zixian Chen. All rights reserved.</p>
				<div>
					<a href="https://zixianchen.com/projects" class="underline">Portfolio</a> | <a href="https://zixianchen.com/contact/" class="underline">Feedback</a>
				</div>
			</footer>
		</body>
	</html>
}

templ Post(message string, comments []posts.JoinComment, postID string, username string, loggedIn string) {
	@Base("GoRant - Post", username, loggedIn) {
		<main class="grid w-full max-w-[1600px] content-center justify-items-center gap-8 space-y-8 lg:grid-cols-3">
			<h1 class="text-5xl font-extrabold lg:col-span-3">Post { postID }</h1>
			<article id="posts" class="w-full space-y-4 lg:col-span-2">
				if len(comments) > 0 {
					for i := 0; i < len(comments); i++ {
						<div class="flex h-auto border border-neutral/30">
							<div class="grid w-20 content-center bg-primary/30 p-2 text-center text-xl font-bold">
								if comments[i].CurrentUserVoted == "true" {
									<button
										hx-target="#posts"
										hx-post={ string(templ.URL(fmt.Sprintf("/posts/%s/comment/%s/upvote", postID, comments[i].RowID))) }
										class="inline-block h-auto text-4xl text-orange-600"
									>
										<svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" class="inline-block" viewBox="0 0 24 24"><path fill="currentColor" d="m7 14l5-5l5 5z"></path></svg>
									</button>
								} else {
									<button
										hx-target="#posts"
										hx-trigger="click"
										hx-post={ string(templ.URL(fmt.Sprintf("/posts/%s/comment/%s/upvote", postID, comments[i].RowID))) }
										class="inline-block h-auto text-4xl hover:text-orange-600 active:-translate-y-1"
									>
										<svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" class="inline-block" viewBox="0 0 24 24"><path fill="currentColor" d="m7 14l5-5l5 5z"></path></svg>
									</button>
								}
								<div>
									if len(comments[i].CountString) > 0 {
										{ comments[i].CountString }
									} else {
										0
									}
								</div>
							</div>
							<div class="w-full grow bg-lime-300/10 p-4">
								<div class="flex border-b border-accent/20 pb-2 text-xl text-base-content/60">
									<div class="flex grow items-center font-bold">
										// <svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" class="me-2 inline text-neutral/70" viewBox="0 0 24 24"><path fill="currentColor" d="M5.85 17.1q1.275-.975 2.85-1.537T12 15t3.3.563t2.85 1.537q.875-1.025 1.363-2.325T20 12q0-3.325-2.337-5.663T12 4T6.337 6.338T4 12q0 1.475.488 2.775T5.85 17.1M12 13q-1.475 0-2.488-1.012T8.5 9.5t1.013-2.488T12 6t2.488 1.013T15.5 9.5t-1.012 2.488T12 13m0 9q-2.075 0-3.9-.788t-3.175-2.137T2.788 15.9T2 12t.788-3.9t2.137-3.175T8.1 2.788T12 2t3.9.788t3.175 2.137T21.213 8.1T22 12t-.788 3.9t-2.137 3.175t-3.175 2.138T12 22"></path></svg>
										<div class="me-2 w-10 rounded-full bg-neutral/70 text-center text-neutral-content">{ comments[i].Initials }</div>
										{ comments[i].UserID }
									</div>
									<div class="flex items-center text-base">
										(#{ comments[i].RowID }) { comments[i].CreatedAt }
									</div>
								</div>
								<div class="py-4 text-base">{ comments[i].Content }</div>
								if comments[i].UserID == username {
									<div class="mt-4 flex w-full justify-end">
										<div class="dropdown dropdown-end dropdown-bottom">
											<div tabindex="0" role="button" class="btn btn-sm flex items-center border border-neutral/60 bg-transparent text-neutral/60 hover:bg-neutral hover:text-neutral-content">
												More Actions<svg xmlns="http://www.w3.org/2000/svg" class="" width="1.3em" height="1.3em" viewBox="0 0 24 24"><path fill="currentColor" d="m12 15.4l-6-6L7.4 8l4.6 4.6L16.6 8L18 9.4z"></path></svg>
											</div>
											<ul tabindex="0" class="menu dropdown-content z-[1] w-52 rounded-box bg-base-100 p-2 shadow">
												<li>
													<button
														hx-target="#posts"
														hx-swap="outerHTML"
														hx-post={ string(templ.URL(fmt.Sprintf("/posts/%s/comment/%s/delete", postID, comments[i].RowID))) }
														class="py-2 ps-4 hover:bg-error hover:text-error-content"
													>
														<svg xmlns="http://www.w3.org/2000/svg" class="me-2" width="1.2em" height="1.2em" viewBox="0 0 24 24">
															<path fill="currentColor" d="M9 17h2V8H9zm4 0h2V8h-2zm-8 4V6H4V4h5V3h6v1h5v2h-1v15z"></path>
														</svg>Delete
													</button>
												</li>
											</ul>
										</div>
									</div>
								}
							</div>
						</div>
					}
				} else {
					<div class="space-y-2 border border-neutral/30 bg-base-200 p-4">
						Nothing here!
					</div>
				}
			</article>
			<div class="w-full">
				<div class="grid justify-items-center">
					<div class="w-full" id="form-message">
						if loggedIn == "false" {
							<div class="w-full pb-4" id="">
								<div class="flex items-center border border-neutral/20 p-4 text-neutral/80">
									<a href="/auth/login" class="flex items-center">
										<svg xmlns="http://www.w3.org/2000/svg" width="1.3em" height="1.3em" class="me-2" viewBox="0 0 24 24"><path fill="currentColor" d="M11 17h2v-6h-2zm1-8q.425 0 .713-.288T13 8t-.288-.712T12 7t-.712.288T11 8t.288.713T12 9m0 13q-2.075 0-3.9-.788t-3.175-2.137T2.788 15.9T2 12t.788-3.9t2.137-3.175T8.1 2.788T12 2t3.9.788t3.175 2.137T21.213 8.1T22 12t-.788 3.9t-2.137 3.175t-3.175 2.138T12 22"></path></svg>
										Please login before posting!
									</a>
								</div>
							</div>
						}
					</div>
					<form method="post" id="comment-form" hx-post={ "/posts/" + postID + "/new" } hx-swap="outerHTML" hx-target="#posts" class="w-full max-w-2xl space-y-4 border border-neutral/20 p-4 shadow-lg">
						<label class="form-control">
							<div class="label flex">
								<div class="label-text grow">Message</div>
								<div class="text-xs italic"><span id="form-message-chars-remaining"></span> characters left</div>
							</div>
							<textarea name="message" id="comment-form-message-input" placeholder="Enter a message of at least 10 chars" class="textarea textarea-bordered min-h-24 rounded-none" minlength="10" maxlength="2000" rows="7" required></textarea>
							<div id="form-message-error"></div>
						</label>
						if loggedIn == "true" {
							<div>
								<button id="comment-submit-button" class="btn btn-accent w-full rounded-none text-lg" style="view-transition-name: add-post-button;">Add Comment</button>
							</div>
						} else {
							<div>
								<button id="comment-submit-button" class="btn btn-accent w-full rounded-none text-lg" style="view-transition-name: add-post-button;" disabled>Add Comment</button>
							</div>
						}
						<script src="/static/js/output/comment-form.js"></script>
					</form>
				</div>
			</div>
		</main>
	}
}

templ About() {
	@Base("About", "", "") {
		<h1>About</h1>
	}
}

templ StarterWelcome(message string, posts []posts.Post, username string, loggedIn string) {
	@Base("GoRant", username, loggedIn) {
		<h1 class="text-5xl font-extrabold">GO. RANT.</h1>
		<div class="grid place-items-center content-center">
			<p class="pb-8 text-2xl">{ message }</p>
			<form method="post" action="/posts" class="join flex w-full justify-center lg:pt-0">
				<input type="text" name="post-id" hx-post="/create" placeholder="Enter a post ID to continue" class="input join-item input-bordered input-accent w-full max-w-96 bg-primary/10 text-base-content focus:outline-none active:border-0 active:border-2" autocomplete="off" required/>
				<button class="btn btn-accent join-item text-lg">Go</button>
			</form>
			<img src="/static/images/swole-doge.webp" alt="Swole Doge" width="350px" height="459.2px" class="py-4 lg:order-first"/>
			<div class="grid grid-cols-4 gap-4 pt-8 lg:pt-16">
				for i := 0; i < len(posts); i++ {
					<a href={ templ.URL(fmt.Sprintf("/posts/%s", posts[i].PostID)) } class="grid content-center border border-neutral/80 p-8">
						<h3 class="text-lg font-bold">{ posts[i].PostID }</h3>
						<div>Posted by { posts[i].UserID }</div>
					</a>
				}
			</div>
		</div>
	}
}

templ Error(message string) {
	@Base("GoRant", "", "") {
		<main class="grid place-items-center content-center">
			<h1 class="text-5xl font-extrabold">GO. RANT.</h1>
			<img src="/static/images/reshot-illustration-404-page-HASGL2MQBU.svg" alt="Error" class="py-10"/>
			<p class="text-2xl">{ message }</p>
		</main>
	}
}

templ Toast(status string, message string) {
	if status == "error" {
		<div id="toast" class="toast toast-end animate-slide-up-down">
			<div class="alert alert-info bg-error">
				<span class="flex items-center text-error-content">
					<svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" class="me-2" viewBox="0 0 24 24"><path fill="currentColor" d="M12 17q.425 0 .713-.288T13 16t-.288-.712T12 15t-.712.288T11 16t.288.713T12 17m-1-4h2V7h-2zm1 9q-2.075 0-3.9-.788t-3.175-2.137T2.788 15.9T2 12t.788-3.9t2.137-3.175T8.1 2.788T12 2t3.9.788t3.175 2.137T21.213 8.1T22 12t-.788 3.9t-2.137 3.175t-3.175 2.138T12 22"></path></svg>
					{ message }
				</span>
			</div>
		</div>
	} else if status == "success" {
		<div id="toast" class="toast toast-end animate-slide-up-down">
			<div class="alert alert-info bg-success">
				<div class="flex items-center text-success-content">
					<svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" class="me-2" viewBox="0 0 24 24"><path fill="currentColor" d="m10.6 16.6l7.05-7.05l-1.4-1.4l-5.65 5.65l-2.85-2.85l-1.4 1.4zM12 22q-2.075 0-3.9-.788t-3.175-2.137T2.788 15.9T2 12t.788-3.9t2.137-3.175T8.1 2.788T12 2t3.9.788t3.175 2.137T21.213 8.1T22 12t-.788 3.9t-2.137 3.175t-3.175 2.138T12 22"></path></svg>
					<span>{ message }</span>
				</div>
			</div>
		</div>
	}
	<script>
		var toastEl = document.getElementById("toast")
		
		setTimeout(() => {
			toastEl.remove()
			console.log("Triggered")			
		}, 5000)
	</script>
}
