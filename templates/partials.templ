package templates

import (
	"fmt"
	"gorant/posts"
	"gorant/users"
)

templ PartialPostNewError(currentUser *users.User, comments []posts.Comment, messages map[string]string) {
	@PartialPostNew(currentUser, comments, "")
	if messages["content"] != "" {
		<div id="form-message-error" class="mt-1 flex items-center rounded-lg text-sm text-error" hx-swap-oob="true">
			<svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" class="me-1" viewBox="0 0 24 24"><path fill="currentColor" d="M12 17q.425 0 .713-.288T13 16t-.288-.712T12 15t-.712.288T11 16t.288.713T12 17m-1-4h2V7h-2zm1 9q-2.075 0-3.9-.788t-3.175-2.137T2.788 15.9T2 12t.788-3.9t2.137-3.175T8.1 2.788T12 2t3.9.788t3.175 2.137T21.213 8.1T22 12t-.788 3.9t-2.137 3.175t-3.175 2.138T12 22"></path></svg>{ messages["content"] }
			<script>
			(() => {
				let classes = ["border-2", "border-error", "focus:border","focus:outline-error", "focus:border-error"]
				document.getElementById("comment-form-message-input").classList.add(...classes)
			})()
		</script>
		</div>
	}
}

templ PartialPostNewSorted(currentUser *users.User, comments []posts.Comment, highlight string) {
	@PartialPostNew(currentUser, comments, highlight)
	@SortButton(currentUser, comments[0].PostID, "true")
}

templ PartialPostNewSuccess(currentUser *users.User, comments []posts.Comment, highlight string) {
	@PartialPostNew(currentUser, comments, highlight) {
		@Toast("success", "Comment added!")
	}
	@PostForm(currentUser, comments[0].PostID, "true")
}

templ PartialPostVote(currentUser *users.User, comments []posts.Comment, highlight string) {
	@PartialPostNew(currentUser, comments, highlight)
}

templ PartialPostNewErrorLogin(currentUser *users.User, comments []posts.Comment) {
	@PartialPostNew(currentUser, comments, "") {
		@Toast("error", "You need to be logged in to add a new comment!")
	}
}

templ PartialPostDelete(currentUser *users.User, comments []posts.Comment) {
	@PartialPostNew(currentUser, comments, "")
}

templ PartialPostErrorMessage(message string) {
	<h2 class="text-xl font-bold">Error!</h2>
	<div>
		{ message }
	</div>
}

templ PartialEditDescriptionResponse(currentUser *users.User, post posts.Post) {
	<div class="group flex items-center" id="post-description">
		if post.UserID == currentUser.UserID {
			<button id="post-description-static" class="flex flex-wrap items-center">
				if post.Description == "" {
					Add a description here
				} else {
					{ post.Description }
				}
				<svg id="" xmlns="http://www.w3.org/2000/svg" class="ms-4 hidden group-hover:flex" width="1em" height="1em" viewBox="0 0 24 24"><path fill="currentColor" d="M3 21v-4.25L16.2 3.575q.3-.275.663-.425t.762-.15t.775.15t.65.45L20.425 5q.3.275.438.65T21 6.4q0 .4-.137.763t-.438.662L7.25 21zM17.6 7.8L19 6.4L17.6 5l-1.4 1.4z"></path></svg>
			</button>
			<form
				id="post-description-form"
				class="join mt-2 hidden w-full"
				hx-post={ string(templ.URL(fmt.Sprintf("/posts/%s/description/edit", post.ID))) }
				hx-target="#post-description"
				hx-swap="outerHTML"
				hx-target-error="#toast"
			>
				<label class="input join-item input-bordered flex w-full max-w-xl items-center rounded-lg">
					<svg xmlns="http://www.w3.org/2000/svg" class="me-4 inline text-neutral/30" width="1.4em" height="1.4em" viewBox="0 0 24 24"><path fill="currentColor" d="M3 21v-4.25L16.2 3.575q.3-.275.663-.425t.762-.15t.775.15t.65.45L20.425 5q.3.275.438.65T21 6.4q0 .4-.137.763t-.438.662L7.25 21zM17.6 7.8L19 6.4L17.6 5l-1.4 1.4z"></path></svg>
					<input
						type="text"
						id="post-description-input"
						name="post-description-input"
						class="grow"
						if post.Description == "" {
							placeholder="Add a description here"
						}
						value={ post.Description }
					/>
					<button type="button" id="post-description-cancel" class="text-accent">
						<svg xmlns="http://www.w3.org/2000/svg" width="1.4em" height="1.4em" viewBox="0 0 24 24"><path fill="currentColor" d="m8.4 17l3.6-3.6l3.6 3.6l1.4-1.4l-3.6-3.6L17 8.4L15.6 7L12 10.6L8.4 7L7 8.4l3.6 3.6L7 15.6zm3.6 5q-2.075 0-3.9-.788t-3.175-2.137T2.788 15.9T2 12t.788-3.9t2.137-3.175T8.1 2.788T12 2t3.9.788t3.175 2.137T21.213 8.1T22 12t-.788 3.9t-2.137 3.175t-3.175 2.138T12 22"></path></svg>
					</button>
				</label>
				<button id="post-description-button" class="btn btn-accent join-item rounded-lg px-6">Save</button>
			</form>
		} else {
			if post.Description == "" {
				No description added
			} else {
				{ post.Description }
			}
		}
		<script>
			(function activateDescriptionForm() {
				document.getElementById("post-description-static").addEventListener("click", () => {
					const postDescriptionForm = document.getElementById("post-description-form")
					postDescriptionForm.classList.remove("hidden")
					const postDescriptionStatic = document.getElementById("post-description-static")
					postDescriptionStatic.classList.add("hidden")
				})

				document.getElementById("post-description-cancel").addEventListener("click", () => {
					const postDescriptionForm = document.getElementById("post-description-form")
					postDescriptionForm.classList.add("hidden")
					const postDescriptionStatic = document.getElementById("post-description-static")
					postDescriptionStatic.classList.remove("hidden")
				})
				
			})()
		</script>
	</div>
}

templ PartialEditMoodError(postID string, mood string) {
	<div id="mood" class="dropdown-start dropdown dropdown-bottom">
		<div tabindex="0" role="button" class="flex items-center text-5xl">
			if mood == "elated" {
				😄
			} else if mood == "happy" {
				🙂
			} else if mood == "sad" {
				☹️
			} else if mood == "upset" {
				😫
			} else if mood == "angry" {
				😡
			} else {
				😐
			}
			<svg xmlns="http://www.w3.org/2000/svg" width="0.5em" height="0.5em" viewBox="0 0 24 24"><path fill="currentColor" d="m12 15.4l-6-6L7.4 8l4.6 4.6L16.6 8L18 9.4z"></path></svg>
		</div>
		<ul tabindex="0" class="menu dropdown-content z-[1] w-auto bg-base-100 p-2 shadow">
			<li class="text-base font-normal">
				<button
					hx-target="#mood"
					hx-swap="outerHTML"
					hx-post={ string(templ.URL(fmt.Sprintf("/posts/%s/mood/edit/elated", postID))) }
				><span class="me-2 inline text-xl">😄</span> Elated</button>
			</li>
			<li class="text-base font-normal">
				<button
					hx-target="#mood"
					hx-swap="outerHTML"
					hx-post={ string(templ.URL(fmt.Sprintf("/posts/%s/mood/edit/happy", postID))) }
				><span class="me-2 inline text-xl">🙂</span> Happy</button>
			</li>
			<li class="text-base font-normal">
				<button
					hx-target="#mood"
					hx-swap="outerHTML"
					hx-post={ string(templ.URL(fmt.Sprintf("/posts/%s/mood/edit/neutral", postID))) }
				><span class="me-2 inline text-xl">😐</span> Neutral</button>
			</li>
			<li class="text-base font-normal">
				<button
					hx-target="#mood"
					hx-swap="outerHTML"
					hx-post={ string(templ.URL(fmt.Sprintf("/posts/%s/mood/edit/sad", postID))) }
				><span class="me-2 inline text-xl">☹️</span> Sad</button>
			</li>
			<li class="text-base font-normal">
				<button
					hx-target="#mood"
					hx-swap="outerHTML"
					hx-post={ string(templ.URL(fmt.Sprintf("/posts/%s/mood/edit/upset", postID))) }
				><span class="me-2 inline text-xl">😫</span> Upset</button>
			</li>
			<li class="text-base font-normal">
				<button
					hx-target="#mood"
					hx-swap="outerHTML"
					hx-post={ string(templ.URL(fmt.Sprintf("/posts/%s/mood/edit/angry", postID))) }
				><span class="me-2 inline text-xl">😡</span> Angry</button>
			</li>
		</ul>
		@Toast("error", "You need to be logged in!")
	</div>
}

templ PartialSettingsEditSuccess(s users.User) {
	<div id="settings-message" class="flex w-full items-center rounded-lg border border-success bg-success p-2 text-success-content shadow-lg">
		<h2 class="flex items-center">
			<svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" class="me-2" viewBox="0 0 24 24"><path fill="currentColor" d="m10.6 16.6l7.05-7.05l-1.4-1.4l-5.65 5.65l-2.85-2.85l-1.4 1.4zM12 22q-2.075 0-3.9-.788t-3.175-2.137T2.788 15.9T2 12t.788-3.9t2.137-3.175T8.1 2.788T12 2t3.9.788t3.175 2.137T21.213 8.1T22 12t-.788 3.9t-2.137 3.175t-3.175 2.138T12 22"></path></svg>
			Saved!
		</h2>
	</div>
	<div id="first-login-message" hx-swap-oob="true" class=""></div>
}

templ PartialCommentEdit(c posts.Comment) {
	<form
		id={ "post-" + c.ID.String() + "-content" }
		class="py-4"
		hx-post={ string(templ.URL(fmt.Sprintf("/posts/%s/comment/%s/edit", c.PostID, c.ID.String()))) }
		hx-target={ string(templ.URL(fmt.Sprintf("#post-%s-content", c.ID.String()))) }
		hx-swap="outerHTML"
	>
		<textarea name="edit-content" class="textarea textarea-bordered h-36 w-full grow text-base" minlength="1" maxlength="2000" required>{ c.Content }</textarea>
		<div>
			<button class="btn btn-accent btn-sm min-w-24 rounded-lg">Save</button>
			<button
				type="button"
				class="btn btn-outline btn-accent btn-sm min-w-24 rounded-lg"
				hx-get={ string(templ.URL(fmt.Sprintf("/posts/%s/comment/%s/edit/cancel", c.PostID, c.ID.String()))) }
				hx-target={ string(templ.URL(fmt.Sprintf("#post-%s-content", c.ID.String()))) }
				hx-swap="outerHTML"
			>Cancel</button>
		</div>
	</form>
}

templ PartialCommentEditSuccess(c posts.Comment) {
	<div id={ "post-" + c.ID.String() + "-content" } class="whitespace-pre-line py-4 text-base">{ c.Content }</div>
}
