package templates

import (
	"fmt"
	"gorant/posts"
	"gorant/users"
)

templ PartialPostNewError(currentUser *users.User, comments []posts.Comment, messages map[string]string) {
	@Comments(currentUser, comments, "")
	if messages["content"] != "" {
		<div id="form-message-error" class="text-error mt-1 flex items-center rounded-lg text-sm" hx-swap-oob="true">
			<svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" class="me-1" viewBox="0 0 24 24"><path fill="currentColor" d="M12 17q.425 0 .713-.288T13 16t-.288-.712T12 15t-.712.288T11 16t.288.713T12 17m-1-4h2V7h-2zm1 9q-2.075 0-3.9-.788t-3.175-2.137T2.788 15.9T2 12t.788-3.9t2.137-3.175T8.1 2.788T12 2t3.9.788t3.175 2.137T21.213 8.1T22 12t-.788 3.9t-2.137 3.175t-3.175 2.138T12 22"></path></svg>{ messages["content"] }
			<script>
			(() => {
				let classes = ["border-2", "border-error", "focus:border","focus:outline-error", "focus:border-error"]
				document.getElementById("comment-form-message-input").classList.add(...classes)
			})()
		</script>
		</div>
	}
}

templ PartialPostNewSorted(currentUser *users.User, comments []posts.Comment, highlight string) {
	@Comments(currentUser, comments, highlight)
	@SortButton(currentUser, comments[0].PostID, "true")
}

templ PartialPostNewSuccess(currentUser *users.User, comments []posts.Comment, highlight string) {
	@Comments(currentUser, comments, highlight) {
		@Toast("success", "Comment added!")
	}
	@PostForm(currentUser, comments[0].PostID, "true")
}

templ PartialPostVote(currentUser *users.User, comments []posts.Comment, highlight string) {
	@Comments(currentUser, comments, highlight)
}

templ PartialPostNewErrorLogin(currentUser *users.User, comments []posts.Comment) {
	@Comments(currentUser, comments, "") {
		@Toast("error", "You need to be logged in to add a new comment!")
	}
}

templ PartialPostDelete(currentUser *users.User, comments []posts.Comment) {
	@Comments(currentUser, comments, "")
}

templ PartialPostErrorMessage(message string) {
	<h2 class="text-xl font-bold">Error!</h2>
	<div>
		{ message }
	</div>
}

templ PartialEditDescriptionResponse(currentUser *users.User, post posts.Post) {
	<div class="group flex items-center" id="post-description">
		if post.UserID == currentUser.UserID {
			<button id="post-description-static" class="flex flex-wrap items-center">
				if post.Description == "" {
					Add a description here
				} else {
					{ post.Description }
				}
				<svg id="" xmlns="http://www.w3.org/2000/svg" class="ms-4 hidden group-hover:flex" width="1em" height="1em" viewBox="0 0 24 24"><path fill="currentColor" d="M3 21v-4.25L16.2 3.575q.3-.275.663-.425t.762-.15t.775.15t.65.45L20.425 5q.3.275.438.65T21 6.4q0 .4-.137.763t-.438.662L7.25 21zM17.6 7.8L19 6.4L17.6 5l-1.4 1.4z"></path></svg>
			</button>
			<form
				id="post-description-form"
				class="join mt-2 hidden w-full"
				hx-post={ string(templ.URL(fmt.Sprintf("/posts/%s/description/edit", post.ID))) }
				hx-target="#post-description"
				hx-swap="outerHTML"
				hx-target-error="#toast"
			>
				<label class="input join-item input-bordered flex w-full max-w-xl items-center rounded-lg">
					<svg xmlns="http://www.w3.org/2000/svg" class="text-neutral/30 me-4 inline" width="1.4em" height="1.4em" viewBox="0 0 24 24"><path fill="currentColor" d="M3 21v-4.25L16.2 3.575q.3-.275.663-.425t.762-.15t.775.15t.65.45L20.425 5q.3.275.438.65T21 6.4q0 .4-.137.763t-.438.662L7.25 21zM17.6 7.8L19 6.4L17.6 5l-1.4 1.4z"></path></svg>
					<input
						type="text"
						id="post-description-input"
						name="post-description-input"
						class="grow"
						if post.Description == "" {
							placeholder="Add a description here"
						}
						value={ post.Description }
					/>
					<button type="button" id="post-description-cancel" class="text-accent">
						<svg xmlns="http://www.w3.org/2000/svg" width="1.4em" height="1.4em" viewBox="0 0 24 24"><path fill="currentColor" d="m8.4 17l3.6-3.6l3.6 3.6l1.4-1.4l-3.6-3.6L17 8.4L15.6 7L12 10.6L8.4 7L7 8.4l3.6 3.6L7 15.6zm3.6 5q-2.075 0-3.9-.788t-3.175-2.137T2.788 15.9T2 12t.788-3.9t2.137-3.175T8.1 2.788T12 2t3.9.788t3.175 2.137T21.213 8.1T22 12t-.788 3.9t-2.137 3.175t-3.175 2.138T12 22"></path></svg>
					</button>
				</label>
				<button id="post-description-button" class="btn btn-accent join-item rounded-lg px-6">Save</button>
			</form>
		} else {
			if post.Description == "" {
				No description added
			} else {
				{ post.Description }
			}
		}
		<script>
			(function activateDescriptionForm() {
				document.getElementById("post-description-static").addEventListener("click", () => {
					const postDescriptionForm = document.getElementById("post-description-form")
					postDescriptionForm.classList.remove("hidden")
					const postDescriptionStatic = document.getElementById("post-description-static")
					postDescriptionStatic.classList.add("hidden")
				})

				document.getElementById("post-description-cancel").addEventListener("click", () => {
					const postDescriptionForm = document.getElementById("post-description-form")
					postDescriptionForm.classList.add("hidden")
					const postDescriptionStatic = document.getElementById("post-description-static")
					postDescriptionStatic.classList.remove("hidden")
				})
				
			})()
		</script>
	</div>
}

templ PartialEditMoodError(postID string, mood string) {
	<div id="mood" class="dropdown-start dropdown dropdown-bottom">
		<div tabindex="0" role="button" class="flex items-center text-5xl">
			if mood == "elated" {
				😄
			} else if mood == "happy" {
				🙂
			} else if mood == "sad" {
				☹️
			} else if mood == "upset" {
				😫
			} else if mood == "angry" {
				😡
			} else {
				😐
			}
			<svg xmlns="http://www.w3.org/2000/svg" width="0.5em" height="0.5em" viewBox="0 0 24 24"><path fill="currentColor" d="m12 15.4l-6-6L7.4 8l4.6 4.6L16.6 8L18 9.4z"></path></svg>
		</div>
		<ul tabindex="0" class="menu dropdown-content bg-base-100 z-1 w-auto p-2 shadow-sm">
			<li class="text-base font-normal">
				<button
					hx-target="#mood"
					hx-swap="outerHTML"
					hx-post={ string(templ.URL(fmt.Sprintf("/posts/%s/mood/edit/elated", postID))) }
				><span class="me-2 inline text-xl">😄</span> Elated</button>
			</li>
			<li class="text-base font-normal">
				<button
					hx-target="#mood"
					hx-swap="outerHTML"
					hx-post={ string(templ.URL(fmt.Sprintf("/posts/%s/mood/edit/happy", postID))) }
				><span class="me-2 inline text-xl">🙂</span> Happy</button>
			</li>
			<li class="text-base font-normal">
				<button
					hx-target="#mood"
					hx-swap="outerHTML"
					hx-post={ string(templ.URL(fmt.Sprintf("/posts/%s/mood/edit/neutral", postID))) }
				><span class="me-2 inline text-xl">😐</span> Neutral</button>
			</li>
			<li class="text-base font-normal">
				<button
					hx-target="#mood"
					hx-swap="outerHTML"
					hx-post={ string(templ.URL(fmt.Sprintf("/posts/%s/mood/edit/sad", postID))) }
				><span class="me-2 inline text-xl">☹️</span> Sad</button>
			</li>
			<li class="text-base font-normal">
				<button
					hx-target="#mood"
					hx-swap="outerHTML"
					hx-post={ string(templ.URL(fmt.Sprintf("/posts/%s/mood/edit/upset", postID))) }
				><span class="me-2 inline text-xl">😫</span> Upset</button>
			</li>
			<li class="text-base font-normal">
				<button
					hx-target="#mood"
					hx-swap="outerHTML"
					hx-post={ string(templ.URL(fmt.Sprintf("/posts/%s/mood/edit/angry", postID))) }
				><span class="me-2 inline text-xl">😡</span> Angry</button>
			</li>
		</ul>
		@Toast("error", "You need to be logged in!")
	</div>
}

templ PartialCommentEdit(c posts.Comment) {
	<div id={ "comment-" + c.ID.String() + "-content" } class="textarea-highlight border-neutral/10 bg-primary/10 mt-4 rounded-xl border" data-comment-id={ c.ID.String() }>
		<form
			method="post"
			id={ "comment-" + c.ID.String() + "-edit-form" }
			hx-post={ string(templ.URL(fmt.Sprintf("/posts/%s/comment/%s/edit", c.PostID, c.ID.String()))) }
			hx-target={ string(templ.URL(fmt.Sprintf("#comment-%s-content", c.ID.String()))) }
			hx-swap="outerHTML"
			hx-trigger="keydown[key=='Enter'&&ctrlKey], click from:#comment-submit-button"
			hx-encoding="multipart/form-data"
			class="w-full space-y-4"
		>
			<label class="form-control">
				<div class="flex items-end">
					<textarea
						name="message"
						id="comment-form-message-input"
						placeholder="Write your thoughts here!"
						class="scroller textarea w-full grow border-0 bg-transparent outline-0 focus:border-0 focus:outline-0"
						minlength="10"
						maxlength="2000"
						rows="4"
						value={ c.Content }
						required
					>{ c.Content }</textarea>
					<button id="comment-submit-button" class="text-accent ps-4 pe-4 text-lg">
						<svg
							xmlns="http://www.w3.org/2000/svg"
							width="1.3em"
							height="1.3em"
							class="material-symbols:send-rounded"
							viewBox="0 0 24 24"
						>
							<path fill="currentColor" d="M4.4 19.425q-.5.2-.95-.088T3 18.5V14l8-2l-8-2V5.5q0-.55.45-.837t.95-.088l15.4 6.5q.625.275.625.925t-.625.925z"></path>
						</svg>
					</button>
				</div>
				<div class="grid grid-cols-2 content-center px-4 py-2">
					<div class="flex w-full items-center gap-8">
						<button class="edit-comment-form-attachment-button text-base-content/60 flex items-center gap-1 text-sm" data-parent-reply-id={ c.ID.String() } type="button">
							<svg
								xmlns="http://www.w3.org/2000/svg"
								width="1.3em"
								height="1.3em"
								class="material-symbols:add-photo-alternate-outline pointer-events-none"
								viewBox="0 0 24 24"
							>
								<path fill="currentColor" d="M5 21q-.825 0-1.412-.587T3 19V5q0-.825.588-1.412T5 3h8v2H5v14h14v-8h2v8q0 .825-.587 1.413T19 21zm1-4h12l-3.75-5l-3 4L9 13zm11-8V7h-2V5h2V3h2v2h2v2h-2v2z"></path>
							</svg><span class="hover:text-accent">Attach</span>
						</button>
					</div>
					<div class="flex items-center justify-end gap-8">
						<div class="text-sm italic"><span id={ "comment-" + c.ID.String() + "-form-message-chars" }></span>/2000</div>
					</div>
				</div>
			</label>
			if c.File.Key == "" {
				<div id={ "comment-" + c.ID.String() + "-edit-form-attachment-accordion" } class="text-base-content/70 grid hidden gap-2 px-4 transition-all duration-500">
					<label id="comment-file-input-droparea" class="outline-base-content/30 grid min-h-14 cursor-pointer content-center justify-items-center rounded-lg py-4 outline-2 outline-dashed">
						<input id="comment-file-input" type="file" name="file" class="file-input file-input-bordered file-input-accent hidden w-full" accept="image/png, image/jpeg, image/webp, image/avif, image/gif, image/svg+xml"/>
						<svg xmlns="http://www.w3.org/2000/svg" width="2rem" height="2rem" class="material-symbols:upload-file" viewBox="0 0 24 24"><path fill="currentColor" d="M11 19h2v-4.175l1.6 1.6L16 15l-4-4l-4 4l1.425 1.4L11 14.825zm-5 3q-.825 0-1.412-.587T4 20V4q0-.825.588-1.412T6 2h8l6 6v12q0 .825-.587 1.413T18 22zm7-13h5l-5-5z"></path></svg>
						<div id="comment-file-message" class="px-2 text-base font-medium break-all"><b>Select</b> or <b>Drag a file</b> to upload</div>
					</label>
					<div class="text-xs">Allowed: .jpg, .gif, .png, .webp, .avif</div>
				</div>
			} else {
				<div id={ "comment-" + c.ID.String() + "-edit-form-attachment-accordion" } class="text-base-content/70 grid gap-2 transition-all duration-500">
					<label id="comment-file-input-droparea" class="outline-base-content/30 grid min-h-14 cursor-pointer content-center justify-items-center rounded-lg py-4 outline-2 outline-dashed">
						<div class="text-base-content/70 grid grid-cols-2 content-center py-2">
							<button type="button" onclick="comment_edit_attachment.showModal()" class="placeholder-image-icon border-neutral/30 bg-neutral text-base-content/70 hover:text-accent flex w-full items-center justify-center overflow-hidden rounded-lg border text-sm underline">
								<img src={ string(templ.URL(fmt.Sprintf("%s", c.ThumbnailURL()))) } alt="Uploaded image" class="object-fit"/>
							</button>
							<div class="grid content-start gap-2 px-4 text-sm">
								<div class="text-xs break-all">{ c.NullFile.Key.String }</div>
								<div class="flex items-center gap-2">
									<button type="button" onclick="comment_edit_attachment.showModal()" class="btn btn-outline btn-accent btn-xs flex min-w-20 items-center gap-1">
										<svg xmlns="http://www.w3.org/2000/svg" width="1.3em" height="1.3em" class="ci:magnifying-glass-plus" viewBox="0 0 24 24">
											<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 10h3m0 0h3m-3 0V7m0 3v3m5 2l6 6m-11-4a7 7 0 1 1 0-14a7 7 0 0 1 0 14"></path>
										</svg>Expand
									</button>
									<a hx-post={ string(templ.URL(fmt.Sprintf("/posts/%s/comment/%s/attachment/delete", c.PostID, c.ID))) } hx-target="#comment-form-attachment-accordion" hx-swap="outerHTML" class="btn btn-error btn-xs flex min-w-20 items-center gap-1">
										<svg xmlns="http://www.w3.org/2000/svg" width="1.3em" height="1.3em" class="material-symbols:delete-outline text-error-content" viewBox="0 0 24 24">
											<path fill="currentColor" d="M7 21q-.825 0-1.412-.587T5 19V6H4V4h5V3h6v1h5v2h-1v13q0 .825-.587 1.413T17 21zM17 6H7v13h10zM9 17h2V8H9zm4 0h2V8h-2zM7 6v13z"></path>
										</svg>Delete
									</a>
								</div>
								<dialog id="comment_edit_attachment" class="modal">
									<div class="modal-box min-w-[40dvw] overflow-auto p-2">
										<form method="dialog" class="grid justify-items-end">
											<button>
												<svg xmlns="http://www.w3.org/2000/svg" width="1.5rem" height="1.5rem" class="material-symbols:close text-base-content/70" viewBox="0 0 24 24">
													<path fill="currentColor" d="M6.4 19L5 17.6l5.6-5.6L5 6.4L6.4 5l5.6 5.6L17.6 5L19 6.4L13.4 12l5.6 5.6l-1.4 1.4l-5.6-5.6z"></path>
												</svg>
											</button>
										</form>
										<div class="grid max-w-[1600px] justify-items-center p-2 text-base">
											<img src={ string(templ.URL(fmt.Sprintf("%s", c.FileURL()))) } alt="Uploaded image" class=""/>
											<div class="modal-action justify-self-end">
												<form method="dialog">
													<button class="btn btn-accent">Close</button>
												</form>
											</div>
										</div>
									</div>
								</dialog>
							</div>
						</div>
					</label>
					<div class="text-xs">Allowed: .jpg, .gif, .png, .webp, .avif</div>
				</div>
			}
			// <div id="comment-form-error-message" class="text-error text-sm"></div>
		</form>
	</div>
}

templ PartialCommentEditSuccess(currentUser *users.User, c posts.Comment) {
	<div id={ "comment-" + c.ID.String() + "-content" } class="comment-content hyphenate pt-4 text-base whitespace-pre-line" data-comment-id={ c.ID.String() }>
		{ c.Content }
		<div class="mt-4 grid grid-cols-2 content-center">
			if len(c.File.Key) > 0 {
				<button onClick={ commentAttachmentModal(c.IDString()) } class="border-neutral/10 bg-neutral/5 text-base-content/70 flex w-fit max-w-56 items-center gap-1 truncate rounded-lg border px-2 py-0.5 text-sm font-medium">
					<svg xmlns="http://www.w3.org/2000/svg" width="1.3em" height="1.3em" class="material-symbols:attach-file-rounded text-base-content/70 pointer-events-none rotate-45" viewBox="0 0 24 24">
						<path fill="currentColor" d="M18 15.75q0 2.6-1.825 4.425T11.75 22t-4.425-1.825T5.5 15.75V6.5q0-1.875 1.313-3.187T10 2t3.188 1.313T14.5 6.5v8.75q0 1.15-.8 1.95t-1.95.8t-1.95-.8t-.8-1.95V7q0-.425.288-.712T10 6t.713.288T11 7v8.25q0 .325.213.538t.537.212t.538-.213t.212-.537V6.5q-.025-1.05-.737-1.775T10 4t-1.775.725T7.5 6.5v9.25q-.025 1.775 1.225 3.013T11.75 20q1.75 0 2.975-1.237T16 15.75V7q0-.425.288-.712T17 6t.713.288T18 7z"></path>
					</svg>
					{ c.File.Key }
				</button>
				// Modal for each attachment
				<dialog id={ "comment_" + c.IDString() + "_attachment" } class="modal">
					<div class="modal-box min-w-[40dvw] overflow-auto p-2">
						<form method="dialog" class="grid justify-items-end">
							<button>
								<svg xmlns="http://www.w3.org/2000/svg" width="1.5rem" height="1.5rem" class="material-symbols:close text-base-content/70" viewBox="0 0 24 24">
									<path fill="currentColor" d="M6.4 19L5 17.6l5.6-5.6L5 6.4L6.4 5l5.6 5.6L17.6 5L19 6.4L13.4 12l5.6 5.6l-1.4 1.4l-5.6-5.6z"></path>
								</svg>
							</button>
						</form>
						<div class="grid max-w-[1600px] justify-items-center p-2 text-base">
							<img src={ string(templ.URL(fmt.Sprintf("%s", c.FileURL()))) } alt="Uploaded image" class=""/>
							<div class="modal-action justify-self-end">
								<form method="dialog">
									<button class="btn btn-accent">Close</button>
								</form>
							</div>
						</div>
					</div>
				</dialog>
			} else {
				<div></div>
			}
			<div class="flex justify-end text-sm">
				<button class="reply-button text-base-content/70 flex items-center gap-2" data-comment-id={ c.IDString() }>
					<svg xmlns="http://www.w3.org/2000/svg" width="1.3rem" height="1.3rem" class="material-symbols:reply pointer-events-none" viewBox="0 0 24 24">
						<path fill="currentColor" d="M19 19v-4q0-1.25-.875-2.125T16 12H6.825l3.6 3.6L9 17l-6-6l6-6l1.425 1.4l-3.6 3.6H16q2.075 0 3.538 1.463T21 15v4z"></path>
					</svg>Reply
				</button>
			</div>
		</div>
	</div>
}

templ PartialAttachmentDeleteSuccess(c posts.Comment, domain string) {
	<div id="comment-form-attachment-accordion" class="border-base-content/20 text-base-content/70 collapse mt-4 rounded-lg border">
		// DaisyUI applies a min-h of 3.75rem by default to checkbox and collapse-title, so classes in both are needed
		<input type="checkbox" class="min-h-10"/>
		<div class="collapse-title min-h-10 content-center px-4 py-1 text-sm">
			<div class="flex items-center">
				if c.NullFile.Key.String != "" {
					<div class="text-base-content/70 hover:text-accent flex grow items-center text-sm">
						<svg xmlns="http://www.w3.org/2000/svg" width="1.3em" height="1.3em" class="material-symbols:attachment me-2 inline" viewBox="0 0 24 24">
							<path fill="currentColor" d="M8.25 18q-2.6 0-4.425-1.825T2 11.75t1.825-4.425T8.25 5.5h9.25q1.875 0 3.188 1.313T22 10t-1.312 3.188T17.5 14.5H8.75q-1.15 0-1.95-.8T6 11.75t.8-1.95T8.75 9H18v2H8.75q-.325 0-.537.213T8 11.75t.213.538t.537.212h8.75q1.05-.025 1.775-.737T20 10t-.725-1.775T17.5 7.5H8.25q-1.775-.025-3.012 1.225T4 11.75q0 1.75 1.238 2.975T8.25 16H18v2z"></path>
						</svg>
						<div class="max-w-96 truncate">1 attachment</div>
					</div>
					<div>
						<svg xmlns="http://www.w3.org/2000/svg" width="1.3em" height="1.3em" viewBox="0 0 24 24">
							<path fill="currentColor" d="m12 15.4l-6-6L7.4 8l4.6 4.6L16.6 8L18 9.4z"></path>
						</svg>
					</div>
				} else {
					<div class="flex grow items-center gap-2 font-medium">
						<svg xmlns="http://www.w3.org/2000/svg" width="1.3rem" height="1.3rem" class="material-symbols:upload" viewBox="0 0 24 24">
							<path fill="currentColor" d="M11 16V7.85l-2.6 2.6L7 9l5-5l5 5l-1.4 1.45l-2.6-2.6V16zm-5 4q-.825 0-1.412-.587T4 18v-3h2v3h12v-3h2v3q0 .825-.587 1.413T18 20z"></path>
						</svg>Upload Image
					</div>
				}
			</div>
		</div>
		<div class="collapse-content space-y-2">
			if c.NullFile.Key.String != "" {
				<div class="text-base-content/70 grid grid-cols-2 content-center py-2">
					<div class="placeholder-image-icon flex justify-center rounded-lg bg-gray-900">
						// <svg xmlns="http://www.w3.org/2000/svg" width="3rem" height="3rem" class="material-symbols:imagesmode-outline" viewBox="0 0 24 24">
						// 	<path fill="currentColor" d="M5 21q-.825 0-1.412-.587T3 19V5q0-.825.588-1.412T5 3h14q.825 0 1.413.588T21 5v14q0 .825-.587 1.413T19 21zm0-2h14V5H5zm1-2h12l-3.75-5l-3 4L9 13zm-1 2V5zm3.5-9q.625 0 1.063-.437T10 8.5t-.437-1.062T8.5 7t-1.062.438T7 8.5t.438 1.063T8.5 10"></path>
						// </svg>
						<a href={ templ.URL(fmt.Sprintf("/view/%s", c.NullFile.Key.String)) } target="_blank">
							<img src={ string(templ.URL(fmt.Sprintf("%s/%s", domain, c.NullFile.Key.String))) } alt="Uploaded image" class="w-24"/>
						</a>
					</div>
					<div class="grid content-start gap-2 px-4 text-sm">
						<div class="text-xs">{ c.NullFile.Key.String }</div>
						<div class="flex items-center gap-2">
							<a href={ templ.URL(fmt.Sprintf("/view/%s", c.NullFile.Key.String)) } class="btn btn-outline btn-accent btn-xs flex min-w-20 items-center gap-1" target="_blank">
								<svg xmlns="http://www.w3.org/2000/svg" width="1.3em" height="1.3em" class="radix-icons:open-in-new-window" viewBox="0 0 15 15">
									<path fill="currentColor" fill-rule="evenodd" d="M12 13a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v3.5a.5.5 0 0 0 1 0V3h9v9H8.5a.5.5 0 0 0 0 1zM9 6.5v3a.5.5 0 0 1-1 0V7.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 7H5.5a.5.5 0 0 1 0-1h3a.5.5 0 0 1 .5.497" clip-rule="evenodd"></path>
								</svg>View
							</a>
							<a hx-post={ string(templ.URL(fmt.Sprintf("/posts/%s/comment/%s/attachment/delete", c.PostID, c.ID))) } class="btn btn-error btn-xs flex min-w-20 items-center gap-1">
								<svg xmlns="http://www.w3.org/2000/svg" width="1.3em" height="1.3em" class="material-symbols:delete-outline text-error-content" viewBox="0 0 24 24">
									<path fill="currentColor" d="M7 21q-.825 0-1.412-.587T5 19V6H4V4h5V3h6v1h5v2h-1v13q0 .825-.587 1.413T17 21zM17 6H7v13h10zM9 17h2V8H9zm4 0h2V8h-2zM7 6v13z"></path>
								</svg>
								Delete
							</a>
						</div>
					</div>
				</div>
			} else {
				<label class="outline-base-content/30 grid min-h-14 cursor-pointer content-center justify-items-center rounded-lg py-4 outline-2 outline-dashed">
					<input id="comment-file-input" type="file" name="file" class="file-input file-input-bordered file-input-accent hidden w-full" accept="image/png, image/jpeg, image/webp, image/avif, image/gif, image/svg+xml"/>
					<svg xmlns="http://www.w3.org/2000/svg" width="2rem" height="2rem" class="material-symbols:upload-file" viewBox="0 0 24 24"><path fill="currentColor" d="M11 19h2v-4.175l1.6 1.6L16 15l-4-4l-4 4l1.425 1.4L11 14.825zm-5 3q-.825 0-1.412-.587T4 20V4q0-.825.588-1.412T6 2h8l6 6v12q0 .825-.587 1.413T18 22zm7-13h5l-5-5z"></path></svg>
					<div id="comment-file-message" class="px-2 text-base font-medium break-all"><b>Select a file</b> to upload</div>
				</label>
				<div class="text-xs">Allowed: .jpg, .gif, .png, .webp, .avif</div>
			}
		</div>
	</div>
}
