package templates

import "gorant/users"

templ KeycloakRegister(emptyUser users.User) {
	@Base("Register", &emptyUser) {
		<main class="grid w-full max-w-[500px] content-center justify-items-center gap-8 space-y-8" hx-ext="response-targets">
			<div class="h-full w-full space-y-4">
				<div id="login-message"></div>
				<div class="border-neutral/30 space-y-8 rounded-lg border bg-white/40 p-8 shadow-lg">
					<h1 class="w-full min-w-96 justify-self-center text-5xl font-extrabold">Register</h1>
					<form
						method="post"
						class="grid gap-4"
						hx-post="/registration"
						hx-target="#login-message"
						hx-swap="outerHTML"
						hx-target-error="#toast"
						hx-trigger="keydown[key=='Enter'&&ctrlKey], click from:#register-button"
						id="settings-form"
					>
						<label class="form-control">
							<div class="label">
								<span class="label-text font-medium">Email</span>
							</div>
							<input
								id="username"
								name="username"
								value=""
								maxlength="50"
								minlength="1"
								class="input input-bordered w-full bg-white/40"
								hx-post="/register-check-username"
								hx-target="#username-check-message"
								hx-swap="outerHTML"
								hx-trigger="keyup delay:0.5s"
							/>
							<div id="username-check-message" class="hidden"></div>
						</label>
						<label class="form-control">
							<div class="label">
								<span class="label-text font-medium">Password</span>
							</div>
							<div class="input input-bordered flex w-full items-center bg-white/40">
								<input id="password-input" type="password" name="password" value="" maxlength="50" minlength="1" class="grow"/>
								<button type="button" id="show-password-button" class="text-neutral/70" data-status="hidden">
									<svg id="icon-show" xmlns="http://www.w3.org/2000/svg" width="1.5rem" height="1.5rem" class="material-symbols:visibility-outline" viewBox="0 0 24 24">
										<path fill="currentColor" d="M12 16q1.875 0 3.188-1.312T16.5 11.5t-1.312-3.187T12 7T8.813 8.313T7.5 11.5t1.313 3.188T12 16m0-1.8q-1.125 0-1.912-.788T9.3 11.5t.788-1.912T12 8.8t1.913.788t.787 1.912t-.787 1.913T12 14.2m0 4.8q-3.65 0-6.65-2.037T1 11.5q1.35-3.425 4.35-5.462T12 4t6.65 2.038T23 11.5q-1.35 3.425-4.35 5.463T12 19m0-2q2.825 0 5.188-1.487T20.8 11.5q-1.25-2.525-3.613-4.012T12 6T6.813 7.488T3.2 11.5q1.25 2.525 3.613 4.013T12 17"></path>
									</svg>
									<svg id="icon-hide" xmlns="http://www.w3.org/2000/svg" width="1.5rem" height="1.5rem" class="material-symbols:visibility-off-outline hidden" viewBox="0 0 24 24">
										<path fill="currentColor" d="m16.1 13.3l-1.45-1.45q.225-1.175-.675-2.2t-2.325-.8L10.2 7.4q.425-.2.863-.3T12 7q1.875 0 3.188 1.313T16.5 11.5q0 .5-.1.938t-.3.862m3.2 3.15l-1.45-1.4q.95-.725 1.688-1.587T20.8 11.5q-1.25-2.525-3.588-4.012T12 6q-.725 0-1.425.1T9.2 6.4L7.65 4.85q1.025-.425 2.1-.638T12 4q3.775 0 6.725 2.087T23 11.5q-.575 1.475-1.513 2.738T19.3 16.45m.5 6.15l-4.2-4.15q-.875.275-1.762.413T12 19q-3.775 0-6.725-2.087T1 11.5q.525-1.325 1.325-2.463T4.15 7L1.4 4.2l1.4-1.4l18.4 18.4zM5.55 8.4q-.725.65-1.325 1.425T3.2 11.5q1.25 2.525 3.588 4.013T12 17q.5 0 .975-.062t.975-.138l-.9-.95q-.275.075-.525.113T12 16q-1.875 0-3.188-1.312T7.5 11.5q0-.275.038-.525t.112-.525zm4.2 4.2"></path>
									</svg>
								</button>
							</div>
						</label>
						<button id="register-button" class="btn btn-accent mt-4 w-full rounded-lg text-lg">Register</button>
						<div class="hover:text-accent text-center text-sm underline"><a href="/login">Or login to an account?</a></div>
					</form>
				</div>
			</div>
		</main>
		<script src="/static/js/output/register-login.js"></script>
	}
}

templ KeycloakLogin(emptyUser users.User) {
	@Base("Login", &emptyUser) {
		<main class="grid w-full max-w-[500px] content-center justify-items-center gap-8 space-y-8" hx-ext="response-targets">
			<div class="h-full w-full space-y-4">
				<div id="login-message"></div>
				<div class="border-neutral/30 space-y-8 rounded-lg border bg-white/40 p-8 shadow-lg">
					<h1 class="w-full min-w-96 justify-self-center text-5xl font-extrabold">Login</h1>
					<form
						method="post"
						class="grid gap-4"
						hx-post="/authenticate"
						hx-target="#login-message"
						hx-swap="outerHTML"
						hx-target-error="#login-message"
						hx-trigger="keydown[key=='Enter'&&ctrlKey], click from:#login-button"
						id="settings-form"
					>
						<label class="form-control">
							<div class="label">
								<span class="label-text font-medium">Email</span>
							</div>
							<input type="email" name="username" value="" maxlength="50" minlength="1" class="input input-bordered w-full bg-white/40"/>
						</label>
						<label class="form-control">
							<div class="label">
								<span class="label-text font-medium">Password</span>
							</div>
							<div class="input input-bordered flex w-full items-center bg-white/40">
								<input id="password-input" type="password" name="password" value="" maxlength="50" minlength="1" class="grow"/>
								<button type="button" id="show-password-button" class="text-neutral/70" data-status="hidden">
									<svg id="icon-show" xmlns="http://www.w3.org/2000/svg" width="1.5rem" height="1.5rem" class="material-symbols:visibility-outline" viewBox="0 0 24 24">
										<path fill="currentColor" d="M12 16q1.875 0 3.188-1.312T16.5 11.5t-1.312-3.187T12 7T8.813 8.313T7.5 11.5t1.313 3.188T12 16m0-1.8q-1.125 0-1.912-.788T9.3 11.5t.788-1.912T12 8.8t1.913.788t.787 1.912t-.787 1.913T12 14.2m0 4.8q-3.65 0-6.65-2.037T1 11.5q1.35-3.425 4.35-5.462T12 4t6.65 2.038T23 11.5q-1.35 3.425-4.35 5.463T12 19m0-2q2.825 0 5.188-1.487T20.8 11.5q-1.25-2.525-3.613-4.012T12 6T6.813 7.488T3.2 11.5q1.25 2.525 3.613 4.013T12 17"></path>
									</svg>
									<svg id="icon-hide" xmlns="http://www.w3.org/2000/svg" width="1.5rem" height="1.5rem" class="material-symbols:visibility-off-outline hidden" viewBox="0 0 24 24">
										<path fill="currentColor" d="m16.1 13.3l-1.45-1.45q.225-1.175-.675-2.2t-2.325-.8L10.2 7.4q.425-.2.863-.3T12 7q1.875 0 3.188 1.313T16.5 11.5q0 .5-.1.938t-.3.862m3.2 3.15l-1.45-1.4q.95-.725 1.688-1.587T20.8 11.5q-1.25-2.525-3.588-4.012T12 6q-.725 0-1.425.1T9.2 6.4L7.65 4.85q1.025-.425 2.1-.638T12 4q3.775 0 6.725 2.087T23 11.5q-.575 1.475-1.513 2.738T19.3 16.45m.5 6.15l-4.2-4.15q-.875.275-1.762.413T12 19q-3.775 0-6.725-2.087T1 11.5q.525-1.325 1.325-2.463T4.15 7L1.4 4.2l1.4-1.4l18.4 18.4zM5.55 8.4q-.725.65-1.325 1.425T3.2 11.5q1.25 2.525 3.588 4.013T12 17q.5 0 .975-.062t.975-.138l-.9-.95q-.275.075-.525.113T12 16q-1.875 0-3.188-1.312T7.5 11.5q0-.275.038-.525t.112-.525zm4.2 4.2"></path>
									</svg>
								</button>
							</div>
						</label>
						<div class="flex justify-end"><a href="/reset-password" class="text-accent pt-1 text-sm underline">Forgot password?</a></div>
						<button id="login-button" class="btn btn-accent mt-4 w-full rounded-lg text-lg">Login</button>
						<div class="text-accent hover:text-accent text-center text-sm underline"><a href="/register">Or register an account?</a></div>
					</form>
				</div>
			</div>
		</main>
		<script src="/static/js/output/register-login.js"></script>
	}
}

templ KeycloakResetPassword(emptyUser users.User) {
	@Base("Reset Password", &emptyUser) {
		<main class="grid w-full max-w-[500px] content-center justify-items-center gap-8 space-y-8" hx-ext="response-targets">
			<div class="h-full w-full space-y-4">
				<div id="login-message"></div>
				<div class="border-neutral/30 space-y-8 rounded-lg border bg-white/40 p-8 shadow-lg">
					<h1 class="w-full min-w-96 justify-self-center text-5xl font-extrabold">Forgot Password</h1>
					<form
						method="post"
						class="grid gap-4"
						hx-post="/reset-verification"
						hx-target="#login-message"
						hx-swap="outerHTML"
						hx-target-error="#toast"
						id="reset-form"
					>
						<label class="form-control">
							<div class="label">
								<span class="label-text font-medium">Email</span>
							</div>
							<input type="email" name="username" value="" maxlength="50" minlength="1" class="input input-bordered w-full bg-white/40"/>
						</label>
						<button class="btn btn-accent mt-4 w-full rounded-lg text-lg">Send Password Reset</button>
						<div class="hover:text-accent text-center text-sm underline"><a href="/login">Back to Login</a></div>
					</form>
				</div>
			</div>
		</main>
	}
}

templ LoggedOut(currentUser *users.User) {
	@Base("Grumplr - Logged Out", currentUser) {
		<div class="w-full max-w-xl content-center">
			<div class="space-y-12 rounded-lg bg-white/40 p-12 shadow-lg">
				<h1 class="flex flex-wrap items-center text-4xl font-bold"><svg xmlns="http://www.w3.org/2000/svg" class="me-4 inline" width="1em" height="1em" viewBox="0 0 24 24"><path fill="currentColor" d="m10.6 16.6l7.05-7.05l-1.4-1.4l-5.65 5.65l-2.85-2.85l-1.4 1.4zM12 22q-2.075 0-3.9-.788t-3.175-2.137T2.788 15.9T2 12t.788-3.9t2.137-3.175T8.1 2.788T12 2t3.9.788t3.175 2.137T21.213 8.1T22 12t-.788 3.9t-2.137 3.175t-3.175 2.138T12 22"></path></svg> Logged Out!</h1>
				<div class="space-y-4">
					<p>
						<a href="/">Redirecting you to the main page in</a>... <span id="countdown" class="text-lg font-bold"></span>
					</p>
				</div>
				<div class="text-center"><span class="loading loading-spinner loading-lg text-accent"></span></div>
			</div>
		</div>
	}
	<script>
		(function() {
			const countdownEl = document.getElementById("countdown")
			let timer = 8
			countdownEl.innerText = timer
			
			setInterval(() => {
				timer -= 1
				if (timer >= 0) {
					countdownEl.innerText = timer
				} else if (timer < 0) {
					window.location.href = "/";
				}
			},1000)
		})()
	</script>
}

templ InvalidUsernameOrPasswordMessage() {
	<div id="login-message">
		<div class="bg-error text-error-content rounded-lg p-4">
			<div class="float-left me-2">
				<svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" class="material-symbols:error" viewBox="0 0 24 24">
					<path fill="currentColor" d="M12 17q.425 0 .713-.288T13 16t-.288-.712T12 15t-.712.288T11 16t.288.713T12 17m-1-4h2V7h-2zm1 9q-2.075 0-3.9-.788t-3.175-2.137T2.788 15.9T2 12t.788-3.9t2.137-3.175T8.1 2.788T12 2t3.9.788t3.175 2.137T21.213 8.1T22 12t-.788 3.9t-2.137 3.175t-3.175 2.138T12 22"></path>
				</svg>
			</div>
			<div>
				Invalid username or password!
			</div>
		</div>
	</div>
}

templ SuccessfulLoginMessage() {
	<div id="login-message">
		<div class="bg-success text-success-content rounded-lg p-4">
			<div class="float-left me-2">
				<svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" class="material-symbols:check-circle" viewBox="0 0 24 24">
					<path fill="currentColor" d="m10.6 16.6l7.05-7.05l-1.4-1.4l-5.65 5.65l-2.85-2.85l-1.4 1.4zM12 22q-2.075 0-3.9-.788t-3.175-2.137T2.788 15.9T2 12t.788-3.9t2.137-3.175T8.1 2.788T12 2t3.9.788t3.175 2.137T21.213 8.1T22 12t-.788 3.9t-2.137 3.175t-3.175 2.138T12 22"></path>
				</svg>
			</div>
			<div>
				Successful login! <a href="/">Redirecting in <span id="counter">3</span></a>...
			</div>
		</div>
	</div>
	<script>
		const counterEl = document.getElementById("counter")
		let counter = 3

		setInterval(() => {
			counter -= 1
			if (counter === 0) {
				window.location.href = "/"
			} else {
				counterEl.innerText = counter
			}
		}, 1000)			
	</script>
}

templ CheckUsernameMessage(exists string) {
	if exists == "exists" {
		<div id="username-check-message" class="mt-1">
			<div class="text-error flex items-center text-sm">
				<svg xmlns="http://www.w3.org/2000/svg" width="1.3em" height="1.3em" class="me-1 inline" viewBox="0 0 24 24">
					<path fill="currentColor" d="M12 17q.425 0 .713-.288T13 16t-.288-.712T12 15t-.712.288T11 16t.288.713T12 17m-1-4h2V7h-2zm1 9q-2.075 0-3.9-.788t-3.175-2.137T2.788 15.9T2 12t.788-3.9t2.137-3.175T8.1 2.788T12 2t3.9.788t3.175 2.137T21.213 8.1T22 12t-.788 3.9t-2.137 3.175t-3.175 2.138T12 22"></path>
				</svg>Username is already taken.
			</div>
			<script>
				(() => {
					const usernameEl = document.getElementById("username")
					if (usernameEl) {
						usernameEl.classList.add("border-error")
					}
				})();
			</script>
		</div>
	} else if exists =="avail" {
		<div id="username-check-message" class="mt-1">
			<div class="text-success flex items-center text-sm">
				<svg xmlns="http://www.w3.org/2000/svg" width="1.3em" height="1.3em" class="material-symbols:check-circle me-1 inline" viewBox="0 0 24 24">
					<path fill="currentColor" d="m10.6 16.6l7.05-7.05l-1.4-1.4l-5.65 5.65l-2.85-2.85l-1.4 1.4zM12 22q-2.075 0-3.9-.788t-3.175-2.137T2.788 15.9T2 12t.788-3.9t2.137-3.175T8.1 2.788T12 2t3.9.788t3.175 2.137T21.213 8.1T22 12t-.788 3.9t-2.137 3.175t-3.175 2.138T12 22"></path>
				</svg>Username is available.
			</div>
			<script>
				(() => {
					const usernameEl = document.getElementById("username")
					if (usernameEl) {
						usernameEl.classList.add("border-success")
					}
				})();
			</script>
		</div>
	} else if exists == "empty" {
		<div id="username-check-message" class="hidden">
			<script>
				(() => {
					const usernameEl = document.getElementById("username")
					if (usernameEl && usernameEl.classList.contains("border-error")) {
						usernameEl.classList.remove("border-error")
					}
					if (usernameEl && usernameEl.classList.contains("border-success")) {
						usernameEl.classList.remove("border-success")
					}
				})();
			</script>
		</div>
	}
}
