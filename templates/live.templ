package templates

import (
	"fmt"
	"gorant/live"
	"gorant/users"
)

templ BaseLive(title string, currentUser *users.User) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="utf-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1"/>
			<meta description="Grumplr: For grumpy grumblers"/>
			<meta name="htmx-config" content='{"includeIndicatorStyles": false}'/>
			<title>{ title }</title>
			<link href="/static/css/output/styles.css" rel="stylesheet"/>
			<script src="/static/js/output/htmx-bundle.js"></script>
		</head>
		<body class="grid min-h-[100dvh] grid-rows-[auto_1fr] overflow-x-hidden font-sans" hx-ext="preload">
			<header id="navbar" class="navbar border-b border-b-neutral/10 bg-primary/25 p-0">
				<div class="navbar-start" preload="mouseover">
					<a href="/" class="flex ps-2 text-3xl font-bold text-accent lg:ps-6">
						<div class="me-1 scale-x-[-1]">
							<svg xmlns="http://www.w3.org/2000/svg" width="1.3em" height="1.3em" class="ri:chat-smile-2-fill text-accent/80" viewBox="0 0 24 24">
								<path fill="currentColor" d="M7.291 20.824L2 22l1.176-5.291A9.96 9.96 0 0 1 2 12C2 6.477 6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10a9.96 9.96 0 0 1-4.709-1.176M7 12a5 5 0 0 0 10 0h-2a3 3 0 1 1-6 0z"></path>
							</svg>
						</div>Grumplr
					</a>
				</div>
				@NavCenterLinks("live")
				@NavProfileBadge(currentUser)
				// <div id="navbar-profile-badge" class="navbar-end lg:pe-6" hx-get="/navbar-profile-badge" hx-swap="outerHTML" hx-trigger="load">
				// 	<span class="loading loading-spinner loading-sm text-accent"></span>
				// </div>
			</header>
			<div id="container" class="grid content-start justify-items-center" preload>
				{ children... }
			</div>
			<div id="toast" class="hidden"></div>
		</body>
	</html>
}

templ LiveScreenBase(currentUser *users.User) {
	@BaseLive("Grumplr", currentUser) {
		<div class="grid w-full content-start justify-items-center gap-y-4 lg:max-w-[1400px] lg:grid-cols-5">
			<aside class="sidebar-min-h-offset grid w-full lg:max-w-[300px]">
				@Sidebar()
			</aside>
			<div
				id="content"
				class="mb-4 w-full max-w-[1100px] rounded-2xl py-8 lg:col-span-4"
			>
				<div id="loader" class="htmx-indicator-none">
					<div class="min-h-[20dvh] py-20 text-center">
						<span class="loading loading-spinner text-accent"></span>
					</div>
				</div>
				<div class="grid gap-8 px-2 lg:px-8">
					{ children... }
				</div>
			</div>
			<script src="/static/js/output/sse.js"></script>
		</div>
	}
}

templ ViewInstantMain(currentUser *users.User, instantPosts []live.InstantPost, instantComments []live.InstantComment) {
	@LiveScreenBase(currentUser) {
		<div class="flex items-center">
			<h2 class="grow px-8 text-center text-3xl font-extrabold">Live</h2>
		</div>
		if currentUser.UserID != "" {
			<form class="grid gap-4" hx-post="/live/new" hx-target="#instant-posts-list" hx-swap="innerHTML">
				// Padding end for label is to prevent input from overflowing under the button
				<label class="lg:max-w-11/12 input input-lg relative flex h-16 w-full items-center justify-self-center rounded-full border-neutral/20 bg-white/40 pe-20 text-base-content shadow-lg outline-[0] focus-within:shadow-lg focus-within:outline-[0] focus:shadow-lg focus:outline-[0] lg:w-[750px] lg:pe-[8.6rem]">
					<svg xmlns="http://www.w3.org/2000/svg" width="1.6em" height="1.6em" class="me-4 text-gray-400" viewBox="0 0 24 24"><path fill="currentColor" d="M11 13H5v-2h6V5h2v6h6v2h-6v6h-2z"></path></svg>
					<input
						type="text"
						id="title"
						name="title"
						placeholder="Create New Instant Post"
						class="w-full grow text-xl"
						minlength="10"
						maxlength="255"
						autocomplete="off"
						required
					/>
					<button id="post-button" class="top-1.75 btn btn-accent absolute right-2 rounded-full text-xl lg:min-w-20">
						<span class="hidden pe-2 ps-1 lg:flex">Start</span>
					</button>
				</label>
			</form>
		} else {
			<div class="flex justify-center">
				<a href="/login" class="btn btn-accent btn-md rounded-3xl px-8 text-lg lg:w-auto lg:min-w-48 lg:text-xl">Login to Create Session</a>
			</div>
		}
		<div>
			<div class="p-2 lg:p-8">
				<div id="instant-posts-list">
					if len(instantPosts) > 0 {
						@ListInstantPosts(instantPosts)
					} else {
						<div class="flex justify-center">
							<img src="/static/images/missing-puzzle.svg" width="363" height="400" class="h-32 w-32 lg:h-56 lg:w-56" alt="Nothing!"/>
						</div>
						<h2 class="mt-8 text-center text-2xl font-extrabold">Couldn't find a live post</h2>
						<div class="pb-8 text-center">Be the first to start one!</div>
					}
				</div>
			</div>
		</div>
	}
}

templ ViewInstantPost(currentUser *users.User, p live.InstantPost) {
	@LiveScreenBase(currentUser) {
		<h2 class="line-clamp-2 max-h-[6.3rem] overflow-hidden text-start text-3xl font-extrabold capitalize">{ p.Title }</h2>
		if currentUser.UserID != "" {
			<form
				id="live-comment-form"
				class="grid gap-4"
				hx-post={ string(templ.URL(fmt.Sprintf("/live/%s/new", p.ID))) }
				hx-swap="none"
				hx-trigger="keydown[key=='Enter'&&ctrlKey], click from:#post-button"
			>
				// Padding end for label is to prevent input from overflowing under the button
				<label class="lg:max-w-11/12 input input-lg input-accent relative flex h-12 w-full items-center justify-self-center rounded-full border-neutral/20 bg-white/40 text-base-content focus:shadow-lg focus:outline-none active:border lg:w-[750px]">
					<input
						id="content-input"
						type="text"
						name="content"
						placeholder="Write something here"
						class="w-full grow"
						minlength="1"
						maxlength="2550"
						autocomplete="off"
						required
					/>
					<button
						id="post-button"
						class="-me-2 text-xl text-accent"
					>
						<svg xmlns="http://www.w3.org/2000/svg" width="1.3em" height="1.3em" class="material-symbols:send-rounded ms-1" viewBox="0 0 24 24">
							<path fill="currentColor" d="M4.4 19.425q-.5.2-.95-.088T3 18.5V14l8-2l-8-2V5.5q0-.55.45-.837t.95-.088l15.4 6.5q.625.275.625.925t-.625.925z"></path>
						</svg>
					</button>
				</label>
			</form>
		} else {
			<div class="flex justify-center">
				<a href="/login" class="btn btn-accent btn-md rounded-3xl px-8 text-lg lg:w-auto lg:min-w-48 lg:text-xl">Login to Send Messages</a>
			</div>
		}
		<div class="max-w-full space-y-4 rounded-lg border border-neutral/20 bg-white/40 p-4">
			<div class="grid min-h-24 justify-items-center">
				<div id="spinner" class="grid content-center justify-items-center">
					<span class="loading loading-spinner loading-lg text-accent"></span>
				</div>
				<ul id="instant-sse" sse-connect={ string(templ.URL(fmt.Sprintf("/event/%s", p.ID))) } hx-ext="sse" sse-swap="instant" class="message-style grid hidden w-full content-start justify-self-start"></ul>
			</div>
		</div>
	}
}

templ ListInstantPosts(instPosts []live.InstantPost) {
	<div class="grid gap-4 lg:grid-cols-3">
		for i := 0; i < len(instPosts); i++ {
			<a href={ templ.SafeURL(fmt.Sprintf("/live/%s", instPosts[i].ID.String())) } class="flex rounded-lg border border-neutral/10 bg-white/40 p-2 transition-all duration-200 ease-out hover:border-secondary/20 hover:bg-primary/30 hover:ring-2 hover:ring-accent/20 hover:ring-offset-2">
				<div class="group grid min-w-10 place-items-center overflow-hidden pe-4 text-center text-lg font-bold lg:min-w-14 lg:text-2xl">
					<span class="me-2 flex h-16 w-16 items-center justify-center rounded-full bg-neutral text-neutral-content">{ instPosts[i].TitleInitials() }</span>
				</div>
				<div class="max-w-48 grow">
					<h3 class="truncate text-xl font-medium leading-loose">
						{ instPosts[i].Title }
					</h3>
					<div class="text-sm text-base-content/60">by { instPosts[i].UserID }</div>
					<div class="flex items-center">
						<div class="grow text-sm text-base-content/60">{ instPosts[i].DateString() }</div>
					</div>
				</div>
			</a>
		}
	</div>
}

templ ListInstantComments(instComments []live.InstantComment) {
	<ul class="list-decimal">
		for i := 0; i < len(instComments); i++ {
			<li>{ instComments[i].Content } by { instComments[i].UserID }</li>
		}
	</ul>
}
